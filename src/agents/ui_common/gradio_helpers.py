#!/usr/bin/env python
# -*- coding: utf-8 -*-
# src/agents/ui_common/gradio_helpers.py
# code style: PEP 8

"""
Gradio UI helper functions for message formatting and rendering
"""

import json


def prepare_final_answer_message(message):
    """
    Convert the final_answer generated by CodeAct to a format that can be
    rendered by Gradio

    Args:
        message: The original message object

    Returns:
        The formatted message
    """
    # support checking message through attributes or dictionary access
    if (hasattr(message, "detailed_type") and
            message.detailed_type == "final_answer"):
        # handle ChatMessage object
        content = message.content

        # handle the case where the content is a JSON string
        if isinstance(content, str) and content.strip().startswith("{"):
            try:
                content = json.loads(content)
            except json.JSONDecodeError:
                pass

        # handle the case where the content is a dictionary
        if isinstance(content, dict) and "content" in content:
            # create a formatted message, return a dictionary
            return {
                "role": "assistant",
                "content": content.get("content", ""),
                "metadata": {
                    "is_markdown": True,
                    "render": True
                }
            }

    # if no special processing is needed, return the original message
    return message
