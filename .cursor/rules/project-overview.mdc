---
description: 
globs: 
alwaysApply: true
---
# DeepSearchAgent Project

DeepSearchAgent is an intelligent agent system that combines the ReAct (Reasoning + Acting) framework and the CodeAct concept (executable code agents) to enable deep web search and reasoning capabilities.

## Project Structure

```
src/agents/
├── agent.py              # ReAct agent implementation
├── cli.py                # Command-line interface
├── codact_agent.py       # CodeAct agent implementation
├── config_loader.py      # Configuration loading utilities
├── main.py               # FastAPI web service
├── prompts.py            # System prompts
├── streaming_agents.py   # Streaming agent implementations
├── streaming_models.py   # Streaming model wrappers
└── tools/                # Tool implementations
```

## Version
Current version: 0.2.4 (as specified in [pyproject.toml](mdc:pyproject.toml))

## Core Components

### Agent Implementations
- **[src/agents/main.py](mdc:src/agents/main.py)**: Main FastAPI service entry point
- **[src/agents/cli.py](mdc:src/agents/cli.py)**: Command-line interface implementation
- **[config.yaml](mdc:config.yaml)**: Configuration file for agents, models, and services
- **[requirements.txt](mdc:requirements.txt)**: Project dependencies
- **[src/agents/agent.py](mdc:src/agents/agent.py)**: Base agent implementation (ReAct paradigm)
- **[src/agents/codact_agent.py](mdc:src/agents/codact_agent.py)**: CodeAct agent implementation
- **[streaming_agents.py](mdc:src/agents/streaming_agents.py)**: Streaming-enabled versions of both agents
- **[streaming_models.py](mdc:src/agents/streaming_models.py)**: Model wrappers supporting streaming output

## Key Components

1. **Core Agents**: Two agent paradigms implemented:
   - ReAct (Reasoning + Acting): Tool-calling agent using structured JSON instructions
   - CodeAct: Code execution agent generating Python code to perform actions

2. **Tools Collection**: Various tools for deep web search and content processing:
    - **Search tools**: Web search, content retrieval, chunking
    - **Processing tools**: Embedding, reranking, computational tools ...
    - **Final Answer tools**: Answer synthesis and formatting

3. **Multiple Interfaces**:
   - CLI mode (`src/agents/cli.py`)
   - FastAPI service (`src/agents/main.py`)

4. **Configuration**:
   - [config.yaml](mdc:config.yaml): Main configuration file
   - [config_loader.py](mdc:src/agents/config_loader.py): Configuration loading utilities
   - [prompts.py](mdc:src/agents/prompts.py): System prompts for different agent types
   - API keys and sensitive data in `.env` (not committed to the repository)

## Key Features in v0.2.4

As documented in @the release notes:

1. **Streaming Output**: Real-time output for both agent types
   - `StreamingReactAgent`: Full streaming of thinking, actions, observations
   - `StreamingCodeAgent`: Streaming for final answer generation

2. **Periodic Planning**: Strategic reassessment at configurable intervals
   - `planning_interval`: Controls frequency of planning steps
   - Helps maintain focus and adjust search strategy

3. **Enhanced CLI Experience**:
   - Rich rendering of JSON/Markdown
   - Progress tracking and statistics
   - Task display management
4. **Reliability Improvements**:
   - Robust error handling
   - Proper initialization sequence for executor environments
   - Fixed type imports and tool recognition
